stages:
  - docker-build
  - deploy


docker-build:
  stage: docker-build
  image: docker:20.10.16
  services:
    - docker:dind
  before_script:
    - echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
  script:
    - docker build --pull -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE
    - echo "Registry image:" $CI_REGISTRY_IMAGE
  only:
    - master

#deploy with ssh key

deploy:
  stage: deploy
  image: ubuntu:latest
  before_script:
    # - apt-get update -qq
    # - apt-get install -qq git
    # # Setup SSH deploy keys
    # - 'which ssh-agent || ( apt-get install -qq openssh-client )'
    # - eval $(ssh-agent -s)
    # - ssh-add <(echo "$SSH_KEY" | base64 -d)
    # - mkdir -p ~/.ssh
    # - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
 
    # - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
    # - eval $(ssh-agent -s)
    # - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    # - mkdir -p ~/.ssh
    # - chmod 700 ~/.ssh
    # - ssh-keyscan $SERVER_HOST_NAME >> ~/.ssh/known_hosts
    # - chmod 644 ~/.ssh/known_hosts

    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add "$SSH_PRIVATE_KEY"
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    
  script:
    - chmod 400 $SSH_KEY
    - ssh -i $SSH_KEY ubuntu@$SERVER_HOST_NAME "echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin; sudo docker pull registry.gitlab.com/do-copypaste/copypaste_node:latest ; cd copypaste_node; docker-compose up -d"
  only:
    - main                                                                                                                                                                            



